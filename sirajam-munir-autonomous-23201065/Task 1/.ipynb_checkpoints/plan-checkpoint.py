# -*- coding: utf-8 -*-
"""plans

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/161NE3TepuVEZ_YVIZdmCSSEXRbV7wcZd
"""

# Importing necessary tools
import time                                # To measure how long the algorithm takes
from utils.grid import load_grid, visualize  # To load the map and draw the result
from utils.astar import astar              # To use A* algorithm
from utils.dijkstra import dijkstra        # To use Dijkstra algorithm

# ----------- SETUP (You can change these values directly here) -----------

map_file = "maps/map1_sparse.csv"  # Path to your map CSV file
start = (0, 0)                      # Starting position (row, column)
goal = (19, 19)                     # Goal position (row, column)
algorithm = "astar"                # Choose between "astar" or "dijkstra"

# ----------- LOAD THE MAP -----------

# This will turn your CSV file into a 2D list of 0s and 1s
grid = load_grid(map_file)

# ----------- RUN THE ALGORITHM -----------

# Start the timer
start_time = time.time()

# Use the selected algorithm to find a path
if algorithm == "astar":
    path = astar(grid, start, goal)
elif algorithm == "dijkstra":
    path = dijkstra(grid, start, goal)
else:
    print("❌ Invalid algorithm. Choose 'astar' or 'dijkstra'.")
    path = None

# Stop the timer
end_time = time.time()

# Calculate time taken in milliseconds
time_taken = (end_time - start_time) * 1000

# ----------- SHOW THE RESULT -----------

# If a path was found
if path:
    print("✅ Path found!")
    print("Path length:", len(path))
    print(f"Time taken: {time_taken:.2f} ms")
else:
    print("❌ No path found!")

# ----------- DRAW AND SAVE THE RESULT -----------

# Create a name for the image file
image_name = f"results/{algorithm}_{map_file.split('/')[-1].split('.')[0]}.png"

# Draw the grid, the path, and save it as an image
visualize(grid, path=path, save_path=image_name)